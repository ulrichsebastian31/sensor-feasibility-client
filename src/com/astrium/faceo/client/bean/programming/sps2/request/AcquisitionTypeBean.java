package com.astrium.faceo.client.bean.programming.sps2.request;/* * @(#)AcquisitionTypeBean.java	 1.0  20/04/2010 * * * PROJET       : SITE FACEO * * LANGUAGE     : Java * * DESCRIPTION  : The AcquisitionType class is used to specify if the acquisition is monoscopic or * stereoscopic, as well as contain specific acquisition parameters. * * CREATION : * --------------------------------------------------------------------- * | Date       | Version | Description                                | * --------------------------------------------------------------------- * | 20/04/2010 |    1.0  |                                            | * --------------------------------------------------------------------- * * MODIFICATION : * --------------------------------------------------------------------- * | Date       | Version | Description                                | * --------------------------------------------------------------------- * |            |         |                                            | * --------------------------------------------------------------------- * *//* * sample of Acquisition type for GetFeasibility Request *  *   <eo:AcquisitionType> *       <eo:MonoscopicAcquisition> *            <eo:CoverageType>MULTIPASS</eo:CoverageType> *            <eo:IncidenceAngle> *               <eo:Azimuth> *                  <eo:min>-180.0</eo:min> *                  <eo:max>180.0</eo:max> *               </eo:Azimuth> *               <eo:Elevation> *                  <eo:min>0.0</eo:min> *                  <eo:max>15.0</eo:max> *               </eo:Elevation> *            </eo:IncidenceAngle> *            <eo:AcquisitionParametersOPT> *               <eo:GroundResolution> *                  <eo:min>2.5</eo:min> *                  <eo:max>10.0</eo:max> *               </eo:GroundResolution> *               <eo:InstrumentMode>PANCHROMATIC</eo:InstrumentMode> *               <eo:FusionAccepted>false</eo:FusionAccepted> *            </eo:AcquisitionParametersOPT> *       </eo:MonoscopicAcquisition> *   </eo:AcquisitionType> */// importimport java.io.Serializable;/** * <B>SITE FACEO</B> <BR> *  * <P> * Acquisition Type informations : * The AcquisitionType class is used to specify if the acquisition is monoscopic or * stereoscopic, as well as contain specific acquisition parameters. * </P> * </P> <BR> *  * sample of Acquisition type for GetFeasibility Request *  *   <eo:AcquisitionType> *       <eo:MonoscopicAcquisition> *            <eo:CoverageType>MULTIPASS</eo:CoverageType> *            <eo:IncidenceAngle> *               <eo:Azimuth> *                  <eo:min>-180.0</eo:min> *                  <eo:max>180.0</eo:max> *               </eo:Azimuth> *               <eo:Elevation> *                  <eo:min>0.0</eo:min> *                  <eo:max>15.0</eo:max> *               </eo:Elevation> *            </eo:IncidenceAngle> *            <eo:AcquisitionParametersOPT> *               <eo:GroundResolution> *                  <eo:min>2.5</eo:min> *                  <eo:max>10.0</eo:max> *               </eo:GroundResolution> *               <eo:InstrumentMode>PANCHROMATIC</eo:InstrumentMode> *               <eo:FusionAccepted>false</eo:FusionAccepted> *            </eo:AcquisitionParametersOPT> *       </eo:MonoscopicAcquisition> *   </eo:AcquisitionType> *  * @author  GR * @version 1.0, le 20/04/2010 */public class AcquisitionTypeBean implements Serializable {	/**	 * 	 */	private static final long serialVersionUID = 7686436554677776593L;	// ---------------- Acquisition : choice : Monoscopic Acquisition or Stereoscopic Acquisition---------------------		private String type = null;		// ---------------- Monoscopic Acquisition ---------------------	private MonoscopicAcquisitionBean monoscopicAcquisition = new MonoscopicAcquisitionBean();		// ---------------- Stereoscopic Acquisition ---------------------	private StereoscopicAcquisitionBean stereoscopicAcquisition = new StereoscopicAcquisitionBean();	// ---------------- Acquisition Parameters ---------------------	// ---------------- OPT Acquisition Parameters ---------------------	private AcquisitionParametersOPTBean acquisitionParametersOPT = new AcquisitionParametersOPTBean();		// ---------------- SAR Acquisition Parameters ---------------------	private AcquisitionParametersSARBean acquisitionParametersSAR = new AcquisitionParametersSARBean();	/**	 * debut des methodes	 	 * 	 * Constructeur par defaut : vide	 */	public AcquisitionTypeBean() {	}	/** getters */		// ---------------- Acquisition ---------------------	/** 	 * getter on type	 * 	 * @return String : Acquisition type (MONO, STEREO or UNKNOWN)	*/	public String getType() {		return (this.type != null) ? this.type : "";	}		// ---------------- Monoscopic Acquisition ---------------------	/** 	 * getter on monoscopicAcquisition	 * 	 * @return MonoscopicAcquisitionBean : Monoscopic Acquisition	*/	public MonoscopicAcquisitionBean getMonoscopicAcquisition() {		return this.monoscopicAcquisition;	}		// ---------------- Stereoscopic Acquisition ---------------------	/** 	 * getter on stereoscopicAcquisition	 * 	 * @return StereoscopicAcquisitionBean : Steroscopic Acquisition	*/	public StereoscopicAcquisitionBean getStereoscopicAcquisition() {		return this.stereoscopicAcquisition;	}	// ---------------- Acquisition Parameters ---------------------		// ---------------- OPT Acquisition Parameters ---------------------	/** 	 * getter on acquisitionParametersOPT	 * 	 * @return AcquisitionParametersOPTBean : OPTICAL acquisition parameters	*/	public AcquisitionParametersOPTBean getAcquisitionParametersOPT() {		return this.acquisitionParametersOPT;	}		// ---------------- SAR Acquisition Parameters ---------------------	/** 	 * getter on acquisitionParametersSAR	 * 	 * @return AcquisitionParametersSARBean : RADAR acquisition parameters	*/	public AcquisitionParametersSARBean getAcquisitionParametersSAR() {		return this.acquisitionParametersSAR;	}	/** setters */	// ---------------- Acquisition ---------------------	/** 	 * setter on type	 * 	 * @param _type (String): type value (MONO, STEREO or UNKNOWN)	*/	public void setType(String _type) {		this.type = _type;	}		// ---------------- Monoscopic Acquisition ---------------------	/** 	 * setter on monoscopicAcquisition	 * 	 * @param _monoscopicAcquisition (MonoscopicAcquisitionBean): monoscopic Acquisition value	*/	public void setMonoscopicAcquisition(MonoscopicAcquisitionBean _monoscopicAcquisition) {		this.monoscopicAcquisition = _monoscopicAcquisition;	}		// ---------------- Stereoscopic Acquisition ---------------------	/** 	 * setter on stereoscopicAcquisition	 * 	 * @param _stereoscopicAcquisition (StereoscopicAcquisitionBean): stereoscopic Acquisition value	*/	public void setStereoscopicAcquisition(StereoscopicAcquisitionBean _stereoscopicAcquisition) {		this.stereoscopicAcquisition = _stereoscopicAcquisition;	}		// ---------------- Acquisition Parameters ---------------------	// ---------------- OPT Acquisition Parameters ---------------------	/** 	 * setter on acquisitionParametersOPT	 * 	 * @param _acquisitionParametersOPT (AcquisitionParametersOPTBean): OPTICAL acquisition parameters value	*/	public void setAcquisitionParametersOPT(AcquisitionParametersOPTBean _acquisitionParametersOPT) {		this.acquisitionParametersOPT = _acquisitionParametersOPT;	}	// ---------------- SAR Acquisition Parameters ---------------------	/** 	 * setter on acquisitionParametersSAR	 * 	 * @param _acquisitionParametersSAR (AcquisitionParametersSARBean): RADAR acquisition parameters value	*/	public void setAcquisitionParametersSAR(AcquisitionParametersSARBean _acquisitionParametersSAR) {		this.acquisitionParametersSAR = _acquisitionParametersSAR;	}	} // class