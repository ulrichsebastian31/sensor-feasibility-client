package com.astrium.faceo.client.bean.programming.sps2;import java.io.Serializable;/** * <B>SITE FACEO</B> <BR> *  * <P> * Cette classe est un conteneur d'informations pour les capteurs (sensor) utilis&eacute;s * </P> * </P> *  * @author  GR * @version 1.0, le 04/06/2010 */public class SensorBean implements Serializable {	/**	 * 	 */	private static final long serialVersionUID = 2435725348750306101L;	/** id */	private String id = null;	/** urn */	private String urn = null;	/** active */	private boolean active = true;	/** describeFile */	private String describeFile = null;	/** SOAP SPS endPoint */	private String endPoint = null;	/** GetCapabilities url */	private String getCapabilitiesUrl = null;	/** synchronous */	private boolean synchronous = true;	/** type : optical or radar */	private String type = null;	/** panel identifier */	private String panelId = null;	/** checkbox identifier */	private String checkBoxId = null;	/** radio button identifier */	private String radioButtonId = null;		/**	 * d&eacute;but des m&eacute;thodes	 	 * 	 * Constructeur par d&eacute;faut : vide : convention Bean	 */	/**	 * Default Constructor. The Default Constructor's explicit declaration	 * is required for a serializable class. (GWT)	*/	public SensorBean() {	}	/** ----------------------- getters ----------------------- */		/** 	 * getter on id	 * 	 * @return String : sensor identifier	*/	public String getId() {		return (this.id != null) ? this.id : "";	}		/** 	 * getter on userOrder	 * 	 * @return String : user order	*/	public String getUrn() {		return (this.urn != null) ? this.urn : "";	}		/** 	 * getter on active	 * 	 * @return boolean : true if active sensor, false else	*/	public boolean getActive() {		return this.active;	}	/** 	 * getter on describeFile	 * 	 * @return String : xml file location for sensor describe parameters	*/	public String getDescribeFile() {		return (this.describeFile != null) ? this.describeFile : "";	}		/** 	 * getter on endPoint	 * 	 * @return String : SOAP SPS endPoint	*/	public String getEndPoint() {		return (this.endPoint != null) ? this.endPoint : "";	}		/** 	 * getter on getCapabilitiesUrl	 * 	 * @return String : GetCapabilities url	*/	public String getGetCapabilitiesUrl() {		return (this.getCapabilitiesUrl != null) ? this.getCapabilitiesUrl : "";	}	/** 	 * getter on synchronous	 * 	 * @return boolean : true if synchronous sensor, false else	*/	public boolean getSynchronous() {		return this.synchronous;	}		/** 	 * getter on type	 * 	 * @return String : type : optical or radar	*/	public String getType() {		return (this.type != null) ? this.type : "";	}	/** 	 * getter on panelId	 * 	 * @return String : panel identifier	*/	public String getPanelId() {		return (this.panelId != null) ? this.panelId : "";	}		/** 	 * getter on checkBoxId	 * 	 * @return String : checkbox identifier	*/	public String getCheckBoxId() {		return (this.checkBoxId != null) ? this.checkBoxId : "";	}	/** 	 * getter on radioButtonId	 * 	 * @return String : radio button identifier	*/	public String getRadioButtonId() {		return (this.radioButtonId != null) ? this.radioButtonId : "";	}		/** ----------------------- setters ----------------------- */	/** 	 * setter on id	 * 	 * @param _id (String) : sensor identifier value	*/	public void setId(String _id) {		this.id = _id;	}	/** 	 * setter on urn	 * 	 * @param _urn (String) : sensor URN value	*/	public void setUrn(String _urn) {		this.urn = _urn;	}		/** 	 * setter on active	 * 	 * @param _active (boolean) : true if active sensor, false else	*/	public void setActive(boolean _active) {		this.active = _active;	}		/** 	 * setter on endPoint	 * 	 * @param _endPoint (String) : SOAP SPS endPoint value	*/	public void setEndPoint(String _endPoint) {		this.endPoint = _endPoint;	}		/** 	 * setter on getCapabilitiesUrl	 * 	 * @param _getCapabilitiesUrl (String) : GetCapabilities url value	*/	public void setGetCapabilitiesUrl(String _getCapabilitiesUrl) {		this.getCapabilitiesUrl = _getCapabilitiesUrl;	}	/** 	 * setter on describeFile	 * 	 * @param _describeFile (String) : xml file location for sensor describe parameters	*/	public void setDescribeFile(String _describeFile) {		this.describeFile = _describeFile;	}	/** 	 * setter on synchronous	 * 	 * @param _synchronous (boolean) : true if synchronous sensor, false else	*/	public void setSynchronous(boolean _synchronous) {		this.synchronous = _synchronous;	}	/** 	 * setter on type	 * 	 * @param _type (String) : type value (optical or radar)	*/	public void setType(String _type) {		this.type = _type;	}		/** 	 * setter on panelId	 * 	 * @param _panelId (String) : panel identifier value	*/	public void setPanelId(String _panelId) {		this.panelId = _panelId;	}		/** 	 * setter on checkBoxId	 * 	 * @param _checkBoxId (String) : checkBox identifier value	*/	public void setCheckBoxId(String _checkBoxId) {		this.checkBoxId = _checkBoxId;	}	/** 	 * setter on radioButtonId	 * 	 * @param _radioButtonId (String) : radio Button identifier value	*/	public void setRadioButtonId(String _radioButtonId) {		this.radioButtonId = _radioButtonId;	}} // class