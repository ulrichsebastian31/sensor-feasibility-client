package com.astrium.faceo.client.bean.programming.sps2.request;/* * @(#)CoverageProgrammmingRequestBean.java	 1.0  20/04/2010 * * * PROJET       : SITE FACEO * * LANGUAGE     : Java * * DESCRIPTION  : Cette classe est un conteneur d'informations pour les requ&ecirc;tes  * des messages XML de l'op&eacute;ration 'GetFeasibility' du standard OGC SPS 2.0 : * A CoverageProgrammingRequest is used when tasking a satellite based on an area and * period of interest, by opposition to the SwathProgrammingRequest that allows the * satellite to be tasked directly based on orbit related criteria (lower level tasking). * * CREATION : * --------------------------------------------------------------------- * | Date       | Version | Description                                | * --------------------------------------------------------------------- * | 20/04/2010 |    1.0  |                                            | * --------------------------------------------------------------------- * * MODIFICATION : * --------------------------------------------------------------------- * | Date       | Version | Description                                | * --------------------------------------------------------------------- * |            |         |                                            | * --------------------------------------------------------------------- * *//* * sample of GetFeasibility Request *  * <sps:GetFeasibility service="SPS" version="2.0.0" xmlns:eop="http://www.esa.int/eop"  xmlns:eo="urn:ogc:def:property:CEOS" xmlns:sps="http://www.opengis.net/sps/2.0" xmlns:swe="http://www.opengis.net/swe/2.0" xmlns:swes="http://www.opengis.net/sweService/1.0">   <swes:extension>      <eo:FeasibilityLevel>FULL</eo:FeasibilityLevel>   </swes:extension>   <sps:sensorID>urn:ESA:sensors:Sentinel-1:C-SAR</sps:sensorID>   <sps:taskingParameters>      <sps:ParameterData>         <sps:encoding>            <swe:XMLEncoding namespace="urn:ogc:def:property:CEOS"/>         </sps:encoding>         <sps:values>            <eo:CoverageProgrammingRequest>               <eo:QualityOfService>                  <eo:Priority>HIGH</eo:Priority>               </eo:QualityOfService>               <eo:RegionOfInterest>                  <eo:Polygon>                     <eo:Exterior elementCount="5">                        <eo:Point>                           <eo:Lat>60.0</eo:Lat>                           <eo:Lon>60.0</eo:Lon>                        </eo:Point>                        <eo:Point>                           <eo:Lat>60.0</eo:Lat>                           <eo:Lon>61.0</eo:Lon>                        </eo:Point>                        <eo:Point>                           <eo:Lat>61.0</eo:Lat>                           <eo:Lon>61.0</eo:Lon>                        </eo:Point>                        <eo:Point>                           <eo:Lat>61.0</eo:Lat>                           <eo:Lon>60.0</eo:Lon>                        </eo:Point>                        <eo:Point>                           <eo:Lat>60.0</eo:Lat>                           <eo:Lon>60.0</eo:Lon>                        </eo:Point>                     </eo:Exterior>                  </eo:Polygon>               </eo:RegionOfInterest>               <eo:TimeOfInterest>                  <eo:SurveyPeriod>                     <eo:min>2010-05-20T00:00:00Z</eo:min>                     <eo:max>2010-05-30T00:00:00Z</eo:max>                  </eo:SurveyPeriod>               </eo:TimeOfInterest>               <eo:AcquisitionType>                  <eo:MonoscopicAcquisition>                     <eo:CoverageType>MULTIPASS</eo:CoverageType>                     <eo:IncidenceAngle>                        <eo:Azimuth>                           <eo:min>-180.0</eo:min>                           <eo:max>180.0</eo:max>                        </eo:Azimuth>                        <eo:Elevation>                           <eo:min>0.0</eo:min>                           <eo:max>15.0</eo:max>                        </eo:Elevation>                     </eo:IncidenceAngle>                     <eo:AcquisitionParametersOPT>                        <eo:GroundResolution>                           <eo:min>2.5</eo:min>                           <eo:max>10.0</eo:max>                        </eo:GroundResolution>                        <eo:InstrumentMode>PANCHROMATIC</eo:InstrumentMode>                        <eo:FusionAccepted>false</eo:FusionAccepted>                     </eo:AcquisitionParametersOPT>                  </eo:MonoscopicAcquisition>               </eo:AcquisitionType>               <eo:ValidationParametersOPT>                  <eo:MaxCloudCover>25.0</eo:MaxCloudCover>                  <eo:MaxSnowCover>100.0</eo:MaxSnowCover>                  <eo:HazeAccepted>true</eo:HazeAccepted>                  <eo:SandWindAccepted>false</eo:SandWindAccepted>               </eo:ValidationParametersOPT>            </eo:CoverageProgrammingRequest>         </sps:values>      </sps:ParameterData>   </sps:taskingParameters></sps:GetFeasibility> */// importimport java.io.Serializable;/** * <B>SITE FACEO</B> <BR> *  * <P> * Cette classe est un conteneur d'informations pour l'op&eacute;ration SPS 'GetFeasibility' * </P> * A CoverageProgrammingRequest is used when tasking a satellite based on an area and * period of interest, by opposition to the SwathProgrammingRequest that allows the * satellite to be tasked directly based on orbit related criteria (lower level tasking). * </P> *  * @author  GR * @version 1.0, le 20/04/2010 */public class CoverageProgrammmingRequestBean implements Serializable {	/**	 * 	 */	private static final long serialVersionUID = 1509749330535406289L;	/** Region Of Interest : Polygon or Circle */	private RegionOfInterestBean regionOfInterest = new RegionOfInterestBean();	/** Time Of Interest : Survey Period or Temporal Series */	private TimeOfInterestBean timeOfInterest = new TimeOfInterestBean();	/** Acquisition Type :parameters + Monoscopic Acquisition or Stereoscopic Acquisition */	private AcquisitionTypeBean acquisitionType = new AcquisitionTypeBean();	/**	 * debut des methodes	 	 * 	 * Constructeur par defaut : vide	 */	public CoverageProgrammmingRequestBean() {	}	/** getters */		/** 	 * getter on regionOfInterest	 * 	 * @return RegionOfInterestBean : region Of Interest	*/ 	public RegionOfInterestBean getRegionOfInterest() {		return this.regionOfInterest;	}		/** 	 * getter on timeOfInterest	 * 	 * @return TimeOfInterestBean : time Of Interest	*/ 	public TimeOfInterestBean getTimeOfInterest() {		return this.timeOfInterest;	}		/** 	 * getter on acquisitionType	 * 	 * @return AcquisitionTypeBean : acquisition type	*/ 	public AcquisitionTypeBean getAcquisitionType() {		return this.acquisitionType;	}	/** setters */	/** 	 * setter on regionOfInterest	 * 	 * @param _regionOfInterest (RegionOfInterestBean): region Of Interest value	*/	public void setRegionOfInterest(RegionOfInterestBean _regionOfInterest) {		this.regionOfInterest = _regionOfInterest;	}		/** 	 * setter on timeOfInterest	 * 	 * @param _timeOfInterest (TimeOfInterestBean): time Of Interest value	*/	public void setTimeOfInterest(TimeOfInterestBean _timeOfInterest) {		this.timeOfInterest = _timeOfInterest;	}	/** 	 * setter on acquisitionType	 * 	 * @param _acquisitionType (AcquisitionTypeBean): time Of Interest value	*/	public void setAcquisitionType(AcquisitionTypeBean _acquisitionType) {		this.acquisitionType = _acquisitionType;	}} // class