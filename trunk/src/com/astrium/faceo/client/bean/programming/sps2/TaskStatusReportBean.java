package com.astrium.faceo.client.bean.programming.sps2;import java.io.Serializable;/** * <B>SITE FACEO</B> <BR> *  * <P> * Cette classe est un conteneur d'informations pour les taches SPS * </P> * </P> *  * @author  GR * @version 1.0, le 20/08/2010 */public class TaskStatusReportBean implements Serializable {	/**	 * 	 */	private static final long serialVersionUID = 6552913145578375237L;		/** task event */	private String event = null;	/** request status */	private String requestStatus = null;		/** task identifier */	private String task = null;	/** task sensor identifier */	private String sensorId = null;	/** task User */	private String user = null;	/** task Title */	private String title = null;	/** task Description */	private String description = null;	/** task update Time */	private String updateTime = null;	/** task status Code */	private String statusCode = null;	/** task estimated ToC */	private String estimatedToC = null;		/** task percent Completion */	private double percentCompletion = 0.d;	/** GetStatus response */	private String response = null;	/** update task : true if task has been modified, false else */	private boolean updateTask = false;	/**	 * methods starting	 	 * 	 * default constructor : empty : Bean convention	 */	/**	 * Default Constructor. The Default Constructor's explicit declaration	 * is required for a serializable class. (GWT)	 */	public TaskStatusReportBean() {	}	/** ----------------------- getters ----------------------- */	/** 	 * getter on event	 * 	 * @return String : event	 */	public String getEvent() {		return (this.event != null) ? this.event : "";	}	/** 	 * getter on requestStatus	 * 	 * @return String : request status	 */	public String getRequestStatus() {		return (this.requestStatus != null) ? this.requestStatus : "";	}	/** 	 * getter on task	 * 	 * @return String : task identifier	 */	public String getTask() {		return (this.task != null) ? this.task : "";	}	/** 	 * getter on user	 * 	 * @return String : task user	 */	public String getUser() {		return (this.user != null) ? this.user : "";	}	/** 	 * getter on description	 * 	 * @return String : task title	 */	public String getTitle() {		return (this.title != null) ? this.title : "";	}	/** 	 * getter on description	 * 	 * @return String : task description	 */	public String getDescription() {		return (this.description != null) ? this.description : "";	}	/** 	 * getter on sensorId	 * 	 * @return String : task sensor identifier	 */	public String getSensorId() {		return (this.sensorId != null) ? this.sensorId : "";	}	/** 	 * getter on updateTime	 * 	 * @return String : task Update Time	 */	public String getUpdateTime() {		return (this.updateTime != null) ? this.updateTime : "";	}	/** 	 * getter on statusCode	 * 	 * @return String : task status code	 */	public String getStatusCode() {		return (this.statusCode != null) ? this.statusCode : "";	}	/** 	 * getter on estimatedToC	 * 	 * @return String : task estimated Time of Completion	 */	public String getEstimatedToC() {		return (this.estimatedToC != null) ? this.estimatedToC : "";	}	/** 	 * getter on percent Completion	 * 	 * @return double : task percent Completion	 */	public double getPercentCompletion() {		return this.percentCompletion;	}	/** 	 * getter on response	 * 	 * @return String : GetStatus response	 */	public String getResponse() {		return (this.response != null) ? this.response : "";	}	/** 	 * getter on updateTask	 * 	 * @return String : true if task has been modified, false else	 */	public boolean getUpdateTask() {		return this.updateTask;	}	/** ----------------------- setters ----------------------- */	/** 	 * setter on event	 * 	 * @param _event (String) : event value	 */	public void setEvent(String _event) {		this.event = _event;	}	/** 	 * setter on requestStatus	 * 	 * @param _requestStatus (String) : request status value	 */	public void setRequestStatus(String _requestStatus) {		this.requestStatus = _requestStatus;	}	/** 	 * setter on task	 * 	 * @param _task (String) : task identifier value	 */	public void setTask(String _task) {		this.task = _task;	}	/** 	 * setter on user	 * 	 * @param _user (String) : task user value	 */	public void setUser(String _user) {		this.user = _user;	}	/** 	 * setter on title	 * 	 * @param _title (String) : task title value	 */	public void setTitle(String _title) {		this.title = _title;	}	/** 	 * setter on description	 * 	 * @param _description (String) : task description value	 */	public void setDescription(String _description) {		this.description = _description;	}	/** 	 * setter on sensorId	 * 	 * @param _sensorId (String) : task sensor identifier	 */	public void setSensorId(String _sensorId) {		this.sensorId = _sensorId;	}	/** 	 * setter on updateTime	 * 	 * @param _updateTime (String) : task update time	 */	public void setUpdateTime(String _updateTime) {		this.updateTime = _updateTime;	}	/** 	 * setter on statusCode	 * 	 * @param _statusCode (String) : task status code	 */	public void setStatusCode(String _statusCode) {		this.statusCode = _statusCode;	}	/** 	 * setter on taskEstimatedToC	 * 	 * @param _taskEstimatedToC (String) : task estimated Time of Completion	 */	public void setEstimatedToC(String _taskEstimatedToC) {		this.estimatedToC = _taskEstimatedToC;	}	/** 	 * setter on percentCompletion	 * 	 * @param _percentCompletion (double) : task percent Completion	 */	public void setPercentCompletion(double _percentCompletion) {		this.percentCompletion = _percentCompletion;	}	/** 	 * setter on response	 * 	 * @param _response (String) : GetStatus response value	 */	public void setResponse(String _response) {		this.response = _response;	}	/** 	 * setter on updateTask	 * 	 * @param _updateTask (boolean) : true if task has been modified, false else	 */	public void setUpdateTask(boolean _updateTask) {		this.updateTask = _updateTask;	}} // class