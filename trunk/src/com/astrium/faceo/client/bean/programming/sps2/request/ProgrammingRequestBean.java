package com.astrium.faceo.client.bean.programming.sps2.request;/* * @(#)ProgrammingRequestBean.java	 1.0  04/2010 * * * PROJET       : SITE FACEO * * LANGUAGE     : Java * * DESCRIPTION  : Cette classe est un conteneur d'informations pour les requ&ecirc;tes  * des messages XML de l'op&eacute;ration 'GetFeasibility', 'Submit' and 'Update' du standard OGC SPS 2.0 * * CREATION : * --------------------------------------------------------------------- * | Date       | Version | Description                                | * --------------------------------------------------------------------- * | 14/04/2010 |    1.0  |                                            | * --------------------------------------------------------------------- * * MODIFICATION : * --------------------------------------------------------------------- * | Date       | Version | Description                                | * --------------------------------------------------------------------- * |            |         |                                            | * --------------------------------------------------------------------- * *//* * sample of GetFeasibility Request *  * <sps:GetFeasibility service="SPS" version="2.0.0" xmlns:eop="http://www.esa.int/eop"  xmlns:eo="urn:ogc:def:property:CEOS" xmlns:sps="http://www.opengis.net/sps/2.0" xmlns:swe="http://www.opengis.net/swe/2.0" xmlns:swes="http://www.opengis.net/sweService/1.0">   <swes:extension>      <eo:FeasibilityLevel>FULL</eo:FeasibilityLevel>   </swes:extension>   <sps:sensorID>urn:ESA:sensors:Sentinel-1:C-SAR</sps:sensorID>   <sps:taskingParameters>      <sps:ParameterData>         <sps:encoding>            <swe:XMLEncoding namespace="urn:ogc:def:property:CEOS"/>         </sps:encoding>         <sps:values>            <eo:CoverageProgrammingRequest>               <eo:QualityOfService>                  <eo:Priority>HIGH</eo:Priority>               </eo:QualityOfService>               <eo:RegionOfInterest>                  <eo:Polygon>                     <eo:Exterior elementCount="5">                        <eo:Point>                           <eo:Lat>60.0</eo:Lat>                           <eo:Lon>60.0</eo:Lon>                        </eo:Point>                        <eo:Point>                           <eo:Lat>60.0</eo:Lat>                           <eo:Lon>61.0</eo:Lon>                        </eo:Point>                        <eo:Point>                           <eo:Lat>61.0</eo:Lat>                           <eo:Lon>61.0</eo:Lon>                        </eo:Point>                        <eo:Point>                           <eo:Lat>61.0</eo:Lat>                           <eo:Lon>60.0</eo:Lon>                        </eo:Point>                        <eo:Point>                           <eo:Lat>60.0</eo:Lat>                           <eo:Lon>60.0</eo:Lon>                        </eo:Point>                     </eo:Exterior>                  </eo:Polygon>               </eo:RegionOfInterest>               <eo:TimeOfInterest>                  <eo:SurveyPeriod>                     <eo:min>2010-05-20T00:00:00Z</eo:min>                     <eo:max>2010-05-30T00:00:00Z</eo:max>                  </eo:SurveyPeriod>               </eo:TimeOfInterest>               <eo:AcquisitionType>                  <eo:MonoscopicAcquisition>                     <eo:CoverageType>MULTIPASS</eo:CoverageType>                     <eo:IncidenceAngle>                        <eo:Azimuth>                           <eo:min>-180.0</eo:min>                           <eo:max>180.0</eo:max>                        </eo:Azimuth>                        <eo:Elevation>                           <eo:min>0.0</eo:min>                           <eo:max>15.0</eo:max>                        </eo:Elevation>                     </eo:IncidenceAngle>                     <eo:AcquisitionParametersOPT>                        <eo:GroundResolution>                           <eo:min>2.5</eo:min>                           <eo:max>10.0</eo:max>                        </eo:GroundResolution>                        <eo:InstrumentMode>PANCHROMATIC</eo:InstrumentMode>                        <eo:FusionAccepted>false</eo:FusionAccepted>                     </eo:AcquisitionParametersOPT>                  </eo:MonoscopicAcquisition>               </eo:AcquisitionType>               <eo:ValidationParametersOPT>                  <eo:MaxCloudCover>25.0</eo:MaxCloudCover>                  <eo:MaxSnowCover>100.0</eo:MaxSnowCover>                  <eo:HazeAccepted>true</eo:HazeAccepted>                  <eo:SandWindAccepted>false</eo:SandWindAccepted>               </eo:ValidationParametersOPT>            </eo:CoverageProgrammingRequest>         </sps:values>      </sps:ParameterData>   </sps:taskingParameters></sps:GetFeasibility> */// importimport java.io.Serializable;import com.astrium.faceo.client.bean.programming.sps2.SensorBean;/** * <B>SITE FACEO</B> <BR> *  * <P> * Cette classe est un conteneur d'informations pour les op&eacute;rations SPS  * 'GetFeasibility', 'Submit' and 'Update' * </P> * </P> *  * @author  GR * @version 1.0, le 14/04/2010 */public class ProgrammingRequestBean implements Serializable {	/**	 * 	 */	private static final long serialVersionUID = 3057828149565235414L;	/** task identifier */	private String identifier = null;	/** task user */	private String user = null;	/** task name */	private String name = null;	/** service */	private String service = null;		/** version */	private String version = null;	/** sensor informations */	private SensorBean sensor = new SensorBean();	/** Tasking request parameters */	private TaskingRequestBean tasking = new TaskingRequestBean();	/**	 * debut des methodes	 	 * 	 * Constructeur par defaut : vide	 */	public ProgrammingRequestBean() {	}	/** getters */		/** 	 * getter on identifier	 * 	 * @return String : task identifier	*/	public String getIdentifier() {		return (this.identifier != null) ? this.identifier : "";	}	/** 	 * getter on user	 * 	 * @return String : user name	*/	public String getUser() {		return (this.user != null) ? this.user : "";	}	/** 	 * getter on name	 * 	 * @return String : task name	*/	public String getName() {		return (this.name != null) ? this.name : "";	}	/** 	 * getter on service	 * 	 * @return String : service	*/	public String getService() {		return (this.service != null) ? this.service : "";	}	/** 	 * getter on version	 * 	 * @return String : version	*/	public String getVersion() {		return (this.version != null) ? this.version : "";	}	/** 	 * getter on sensor	 * 	 * @return SensorBean : sensor informations (urn, endPoint ...)	*/	public SensorBean getSensor() {		return this.sensor;	}	/** 	 * getter on tasking	 * 	 * @return TaskingRequestBean : tasking parameters (feasibilityLevel, qualityOfService, coverage, period ...)	*/	public TaskingRequestBean getTasking() {		return this.tasking;	}	/** setters */	/** 	 * setter on identifier	 * 	 * @param _identifier (String) : task identifier value	*/	public void setIdentifier(String _identifier) {		this.identifier = _identifier;	}	/** 	 * setter on user	 * 	 * @param _user (String) : task user value	*/	public void setUser(String _user) {		this.user = _user;	}	/** 	 * setter on name	 * 	 * @param _name (String) : task name value	*/	public void setName(String _name) {		this.name = _name;	}	/** 	 * setter on service	 * 	 * @param _service (String) : service value	*/	public void setService(String _service) {		this.service = _service;	}	/** 	 * setter on version	 * 	 * @param _version (String) : version value	*/	public void setVersion(String _version) {		this.version = _version;	}		/** 	 * setter on sensor	 * 	 * @param _sensor (SensorBean): sensor informations value (urn, endPoint ...)	*/	public void setSensor(SensorBean _sensor) {		this.sensor = _sensor;	}	/** 	 * setter on _tasking	 * 	 * @param _tasking (TaskingRequestBean): tasking parameters (feasibilityLevel, qualityOfService, coverage, period ...)	*/	public void setTasking(TaskingRequestBean _tasking) {		this.tasking = _tasking;	}} // class